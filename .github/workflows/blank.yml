name: Deploy to Google Cloud VM

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: infinite-rope-385620
  VM_NAME: instance-1
  VM_ZONE: europe-west9-a
  CONTAINER_NAME: bot-discord
  GCR_HOSTNAME: gcr.io

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Google Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.GCR_HOSTNAME }}
        username: _json_key
        password: ${{ secrets.GCR_JSON_KEY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}

  deploy_to_gcloud:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest

    steps:
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true

    - name: SSH into the VM instance
      run: |
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo apt-get update"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable' | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo apt-get update"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo apt-get install -y docker-ce docker-ce-cli containerd.io"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo docker pull ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo docker stop $(sudo docker ps -q) || true"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "echo 'DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}' > .env"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "echo 'WANDB_API_KEY=${{ secrets.WANDB_API_KEY }}' >> .env"
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.VM_ZONE }} --command "sudo docker run -d --rm --name ${CONTAINER_NAME} ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}"

